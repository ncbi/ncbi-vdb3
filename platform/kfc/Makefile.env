# kdb3.kfc.Makefile.env

# start with unknowns
OS = unknown
ARCH = unknown

# determine OS
UNAME = $(shell uname -s)
ifeq (Darwin, $(UNAME))
	OS = mac
endif
ifeq (Linux, $(UNAME))
	OS = linux
endif

# determine architecture
MARCH = $(shell uname -m)
ifeq (armv7l, $(MARCH))
	ARCH = armv7l
endif
ifeq (aarch64, $(MARCH))
	ARCH  = aarch64
endif
ifeq (x86_64, $(MARCH))
	ARCH  = x86_64
endif

# generally using g++ to compile
COMP ?= g++

# create variables based entirely upon OS
ifeq (mac, $(OS))
	CFLAGS += -DMAC -DBSD -DUNIX
endif
ifeq (linux, $(OS))
	CFLAGS += -DLINUX -DUNIX
	LMCHECK = -lmcheck
endif

# create variables based entirely upon ARCH
ifeq (armv7l, $(ARCH))
	BITS = 32
	CFLAGS += -DRPI -mcpu=cortex-a53 -mfpu=neon-vfpv4 -Wno-psabi
	Z128SRC = z128
	Z128LSRC = z128.nopt
endif
ifeq (aarch64, $(ARCH))
	BITS = 64
	CFLAGS += -DHAVE_Z128
endif
ifeq (x86_64, $(ARCH))
	BITS = 64
	CFLAGS += -DHAVE_Z128 -DLONG_DOUBLE_IS_NOT_R128
endif

# now any unique combinations of OS and ARCH
ifeq (mac-x86_84, $(OS)-$(ARCH))
endif
ifeq (linux-x86_64, $(OS)-$(ARCH))
	CFLAGS += -DHAVE_R128
endif
ifeq (linux-armv7l, $(OS)-$(ARCH))
endif
ifeq (linux-aarch64, $(OS)-$(ARCH))
	CFLAGS += -DHAVE_R128 -D__float128=_Float128
endif

# combinations of OS and COMP
ifeq (linux-g++, $(OS)-$(COMP))
	CFLAGS += -rdynamic
endif

# combinations of OS, ARCH and COMP
ifeq (linux-x86_64-g++, $(OS)-$(ARCH)-$(COMP))
	CFLAGS += -DHAVE_QUADMATH
	LQUADMATH = -lquadmath
endif
ifeq (linux-x86_64-clang++, $(OS)-$(ARCH)-$(COMP))
endif

CFLAGS += -DARCHBITS=$(BITS) -D$(ARCH) -Wall

OBJX   = o
LIBX   = a

INCDIR = -I$(TOP)/../inc
OBJDIR = $(HOME)/obj/$(MODULE)
LIBDIR = $(TOP)/../../build/lib
BINDIR = $(HOME)/bin
TSTDIR = $(HOME)/tst/$(MODULE)

# tests need to access inside gtest stuff
TSTINCDIR = $(INCDIR) -I$(TOP)/../../external/googletest/googletest/include -I$(TOP)/gtest/googletest

# include dependencies
include $(wildcard $(OBJDIR)/*.d)

# C++ compiler to use
CC = $(COMP) -std=c++17

# tell make to forget some of its built-in rules
.SUFFIXES:


$(OBJDIR)/%.tst.dbg.$(OBJX): %.cpp $(TOP)/kfc/Makefile.env
	$(CC) -g -c $< -o $@ -DTESTING -DDEBUG $(CFLAGS) $(TSTINCDIR) -MD
$(OBJDIR)/%.dbg.$(OBJX): %.cpp $(TOP)/kfc/Makefile.env
	$(CC) -g -c $< -o $@ -DDEBUG $(CFLAGS) $(INCDIR) -MD
$(OBJDIR)/%.tst.rel.$(OBJX): %.cpp $(TOP)/kfc/Makefile.env
	$(CC) -O3 -c $< -o $@ -DTESTING -DNDEBUG $(CFLAGS) $(TSTINCDIR) -MD
$(OBJDIR)/%.rel.$(OBJX): %.cpp $(TOP)/kfc/Makefile.env
	$(CC) -O3 -c $< -o $@ -DNDEBUG $(CFLAGS) $(INCDIR) -MD

$(OBJDIR)/%.nopt.tst.dbg.$(OBJX): %.cpp $(TOP)/kfc/Makefile.env
	$(CC) -g -c $< -o $@ -DTESTING -DDEBUG $(CFLAGS) $(TSTINCDIR) -MD
$(OBJDIR)/%.nopt.dbg.$(OBJX): %.cpp $(TOP)/kfc/Makefile.env
	$(CC) -g -c $< -o $@ -DDEBUG $(CFLAGS) $(INCDIR) -MD
$(OBJDIR)/%.nopt.tst.rel.$(OBJX): %.cpp $(TOP)/kfc/Makefile.env
	$(CC) -c $< -o $@ -DTESTING -DNDEBUG $(CFLAGS) $(TSTINCDIR) -MD
$(OBJDIR)/%.nopt.rel.$(OBJX): %.cpp $(TOP)/kfc/Makefile.env
	$(CC) -c $< -o $@ -DNDEBUG $(CFLAGS) $(INCDIR) -MD

LD = $(CC)

# output directories
$(OBJDIR) $(LIBDIR) $(BINDIR) $(TSTDIR):
	mkdir -p $@
